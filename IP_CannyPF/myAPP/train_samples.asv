addpath('../helperFuncs');
addpath('../helperPlots');
addpath('../mexAPI');

parser_JSON_hyperParams;
global GaussSize;
global VMGradient;

global angle_expect;
global angle_tolerance;
global scale;
global resizeImageHeight;
global resizeImageWidth;
global windowWidth;
global windowStepSize;
global decision_criter;



%% test:  samples -> 3 folders   2022-04-28_14-02-34  2022-04-28_15-39-22    2022-04-28_16-21-50
for scale = scale_start : scale_step : scale_end
    resizeImageHeight = size(img_rgb, 1) / scale;
    resizeImageWidth = size(img_rgb, 2) / scale;
    for windowWidth = windowWidth_start : windowWidth_step : windowWidth_end
        for windowStepSize = windowStepSize_start : windowStepSize_step : windowStepSize_end
            for angle_tolerance = angle_tolerance_start : angle_tolerance_step : angle_tolerance_end
                for i = 1 : decision_criterion_size
                    decision_criter = decision_criterion{i, 1};
                end
            end
        end
    end
end

output_data = cell(3,1);  % 3 folders
imgFolder = '2022-04-28_14-02-34';
imgPath = ['U:\my_projs\imgSamples', filesep, imgFolder];
imgSamples = dir(imgPath);
imgNumber = length(imgSamples);
output_data{1, 1} = 

for k = 3:imgNumber
    try
        img_rgb = imread([imgPath, filesep, imgSamples(k).name]);
    catch ME
        fprintf('There was a problem reading file #%d, "%s"\n', k, imgSamples(k).name);
        continue
    end 
    
    resizeImageHeight = size(img_rgb, 1) / scale;
    resizeImageWidth = size(img_rgb, 2) / scale;  
    
    save_path_img = ['U:\my_projs\g_output', filesep, imgSamples(k).name(1:end-4), '.png'];
    [runTime, runTime_matlab, left_border_pos, left_maxVal, right_border_pos, right_maxVal, windows_features] = train_single_sample(img_rgb, save_path_img);
    
    
    % save data
%     save_path_data = ['U:\my_projs\g_output', filesep, imgSamples(k).name(1:end-4), '_data_edge_count.mat'];
%     save(save_path, 'edge_count');

end
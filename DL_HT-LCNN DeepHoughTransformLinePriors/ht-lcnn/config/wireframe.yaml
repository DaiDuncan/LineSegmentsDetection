io:
  vote_index: vote_index_128_128_3_1.mat  # 4 params (rows, cols represent the image; h,w are the resolution of rho, theta)
  logdir: D:/dl_save # logs/
  datadir: D:/dl_mydataset_2_junctions    # for train (vliad included)
  imgs_root: D:/  # only for test
  outdir: D:/dl_save
  resume_from: # D:/dl_save/221022-211125-train
  num_workers: 4
  tensorboard_port: 0
  validation_interval: 5000  # original: 20000 -> used as a flag to validate()  (in trainer.py line 209)

model:
  # image:  # changed in lcnn/datasets.py (use the data from the image self)
  #     mean: [109.730, 103.832, 98.681]  # sample: [191.53, 191.11, 185.83]
  #     stddev: [22.275, 22.124, 23.229]  # sample: [85.11, 85.108, 87.53]

  batch_size: 3  # original: 5
  batch_size_eval: 2

  ### backbone multi-task parameters
  head_size: [[2], [1], [2]]
  loss_weight:
    jmap: 8.0
    lmap: 0.5 # original: 0.5
    joff: 0.25
    lpos: 1 # original: 1
    lneg: 1
  # head_size: [[1]]  
  # loss_weight:
  #   rmse: 1

  ### backbone parameters, num parameters of a HT-IHT block ~= 0.5 * # of a Hourglass module
  backbone: stacked_hourglass
  depth: 4
  num_stacks: 4  # used for "backbone"
  num_blocks: 1  # used for "residual"

  ###########################################################################################
  ############################ sampler parameters: my task -> extract 2 lines from 4 junctions
  # # ## sampler parameters
  # # static sampler
  # n_stc_posl: 2 # original: 300
  # n_stc_negl: 4 # original: 40

  # # dynamic sampler -> from junctions to compose lines
  # n_dyn_junc: 4 # original: 300
  # n_dyn_posl: 2 # original: 300
  # n_dyn_negl: 4 # original: 80
  # n_dyn_othr: 6 # original: 600 

  # # LOIPool layer parameters
  # n_pts0: 32
  # n_pts1: 8

  # # line verification network parameters
  # dim_loi: 128
  # dim_fc: 1024

  # # maximum junction and line outputs
  # n_out_junc: 4  # original: 250 -> I need only 4
  # n_out_line: 2  # original: 2500 -> I need only 2

  ########################################################
  ########################### sampler parameters: original
  ### sampler parameters
  # static sampler
  n_stc_posl: 300
  n_stc_negl: 40

  # dynamic sampler
  n_dyn_junc: 300  # max_K = M.n_dyn_junc // n_type  -> k: number of junctions
  n_dyn_posl: 300
  n_dyn_negl: 80
  n_dyn_othr: 600

  # LOIPool layer parameters
  n_pts0: 32  # in line_vectorizer.py __init__()
  n_pts1: 8   # scale_factor = M.n_pts0 // M.n_pts1

  # line verification network parameters
  dim_loi: 128  # fc output
  dim_fc: 1024

  # maximum junction and line outputs
  n_out_junc: 4  # -> I need only 4
  n_out_line: 2 # -> I need only 2


  ###########################################################################################

  # additional ablation study parameters
  use_cood: 0
  use_slop: 0
  use_conv: 0

  # junction threashold for evaluation (See #5)
  eval_junc_thres: 0.008  # decide: whether it's a valid junction in predicted jmap

optim:
  name: Adam
  lr: 4.0e-4
  amsgrad: True
  weight_decay: 1.0e-4
  max_epoch: 20       # original: 24  -> for mytask: 16  (10 epochs: 23:16-17:34 -> 18h)
  lr_decay_epoch: 8  # original: 10  -> 

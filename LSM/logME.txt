website page - including article, demo and source code: http://www.ipol.im/pub/art/2012/gjmr-lsd/
website page - the author: https://scholar.google.fr/citations?hl=en&user=GLovf4UAAAAJ&view_op=list_works&sortby=pubdate
github repo: https://github.com/theWorldCreator/LSD




【LSM algorithm】
step 1 use lsd_1.6(updated) to replace lsd_1.5
step 2 implement lsd_mexFunc.c （imitate the lsd_call_example.c to implement lsd_mexFunc.c）
step 3 compiling: mex -output lsd_mexFunc lsd_mexFunc.c lsd.c
step 4 using the mex file by command: (see demo.m)
	[D, num_lines]=lsd_mexFunc(I/max(I(:))*255, 1.0);


=====================================
[lsd_1.5]
1 Bug: mxErrMsgTxt -> mexErrMsgTxt (other mexFuncs use mx_)
2 Bug: there is no hardcopy() in the new version 
	`img = hardcopy(hfig, '-Dzbuffer', '-r0');` -> `img = frame2im(getframe(hfig));`


=====================================
[lsd_1.6]
### Debug notes： lsd_mexFunc.c
1 Bug: mxErrMsgTxt -> mexErrMsgTxt (other mexFuncs use mx_)


2 Issue: lsd_mexFunc.c
 - in lsd_mexFunc.c some variable are not defined in lsd.h （because everthing except LSD functions are only declared and implemented in lsd.c）
    - Solution: move the in lsd_mexFunc.c called variable and functions to lsd.h (Don't delete others, and don't redefinite)

 - Bug: the arguments number of lsd_scale() (lsd.c implementation differs from lsd1.5 to lsd1.6 -> need to change mexFunction)
    - double * lsd_scale(int * n_out, double * img, int X, int Y, double scale);

-> final decision: rewrite mexFunction() 2022.08.27


===============================================================================
lsd_mexFunc.c in lsd_1.6  2022.08.29 git commit ""
===============================================================================
step 1 Theory (macro frame): to get familiar with the matlab apiref.pdf (C/C++ Python Java Fortran)
	see Roam Research: @Matlab mex编译
	mx_
	- input: 		mxget...
	- output: 		mxCreate...
	- data structure	mwSize, mxArray
	- data type		mxDouble
	- determine data type	mxIs...
	- memory related	mxMalloc, mxRealloc...
	
	mex_
	- mexPrintf
	- mexErrMsgIdAndTxt
	- mexWarnMsgIdAndTxt	


step 2 Demo (official): to form the impression of usage
	edit([matlabroot '/extern/examples/mex/arrayProduct.c']);
	edit([matlabroot '/extern/examples/mex/mexfunction.c']);
	edit([matlabroot '/extern/examples/refbook/timestwo.c']);
	edit([matlabroot '/extern/examples/refbook/timestwoalt.c']);   # 函数参数是指针引用 @lsd_1.6中的int & n_out 
	edit([matlabroot '/extern/examples/mx/mxcreatecharmatrixfromstr.c']);


step 3 Dev (references & practical): 
	1) make sure the source code is fine: lsd.c -> lsd_call_example.c (需要编译： make -> MinGW or VS 2019 community)
	2) refer the old successful demo: 
		- lsd_v1.5
		- MCMLSD (#define prh[], plh[])
	3) implement your own:  (see lsd_mexFunc.c in v1.6)
		Key operation: 
			- from 2D-Matrix('M_in': column major order) to 1D-Array('image': row major order)
			- from 1D-Array('output': row major order) in C to 2D-Matrix('M_out': column major order)
			- free the pointer (or allocated memory)
	4) debug
		Trick: mexPrintf("hey I'm here 1 \n");
		1. keep the lsd.c lsd.h not changed
		2. customize my own inputs & outputs in mex excutable file
		

step 4 summary & conclusion -> README.txt, logME.txt

